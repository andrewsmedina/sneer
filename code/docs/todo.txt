Sneer is free software to change the world.
Sneer is free software to help you change the world.
Sneer is software to change the world.
Sneer is free world-changing software.


Who Are You?

End Users - "We want to do cool things with our friends."
   App marketplace inside Sneer. (Future)
   App websites
      Single click (clipboard interaction)
         Didn't work? Install experience
            Install Java? Auto installer?
            Single Sneer Jar (not webstart)


Expert Users - "Sneer is cool."
   Help others use Sneer
      Run a big dedicated sneer machine - Gain T4T Credit


App Designers and Developers - "I want people to use my app."
   Instructions on how to embed an app in a website.
   API Docs


Platform Designers and Developers - "I want to help improve the Sneer platform."
   Git project.


-------------------------------


General Direction:
	1) To ENABLE users to develop and share bricks.
	2) To MOTIVATE users to develop bricks by fostering a growing user-base through interesting snapps such as media sharing (Wusic, Movies, etc). Better ideas of cool easy-kill snapps are welcome.


Volunteers ==============================================
	- Chat: instead of using JOptionPanes, extract from Wind a separate "ChatGui" brick, so that Wind and ` can both use the same Gui.
		- Create a PrivateChatWindow that will use wind's extracted GUI behaviour.
		- Enable multiple instances of the window, one for each contact
		- The window should use o3chat library/brick
		- unify Wind/PrivateChat GUI behavior
			- PrivateChat must filter tuples by contact
			- Finish GUI refactoring involving Wind and PrivateChat 
			- enter's and reordering's bug 			

	- Freedom 2
		- handshaking protocol
			- the callee can accept or reject recent request waiting for approval
				- if rejected: add contact seal to black list
				- if accepted: add contact seal to contact list (initially, contact nickname = name) 
			- refactor incominghandshaker (readContactsSealBytes method)

	- LogConsole filters in textfield instead of list.
	
	- ToroidalGo - "Finish Him"
	

Bamboo =================================================

	- GUI Nature
		- "Finish Him"


Igor ==================================================== 

	- Properties? Attributes? Window - For reading/setting my own Property/Attribute values and for contacts' values.
	
	- Add list of friends to ContactInfoWindow
		- Add "Me Too" button to add selected contact's contact as my contact

	- New Contact Stati (Test Driven, of course)
		- Away
			- Presence detection spike based on TimeboxedEventQueue that already intercepts all gui activity. 
		- Busy


Klaus =================================================

	- InternetAddresses - Make OwnHost into an attribute. Remove list of internet addresses from Contact Gui window. Use a single "Attempted Host" and "Attempted Port" attribute pair.
	
	- Prevalence loading impls in API classloader during tests - Fix
		- Uncomment in BrickTestRunner the following line (around line 100):  //  if (name.indexOf(".impl.")...
		- FileMapData - make static again
	
	- GUI Nature
		- [Klaus] Announce to community
	
	- Prevalence
		- ContactSeals.void put(String contactNickname, Seal seal) throws Refusal; -> PickyConsumer<Seal> sealPutterFor(Contact contact) throws Refusal;
			- Change MusicalTasteMatcher's interface to use the contact instead of the nickname (string)
		- [Igor] BrickStateStore: retire. Use the prevalent nature instead.
		- Announce to community
			- Document

	- Wusic - MusicalTasteMatcher
		- Business Logic
			- FunctionalTest not necessary. Unit test is enough because there is no remoteness going on and only a single brick is involved in the logic.

	- Revise entire package structure.
		- Remove all calls to Thread.sleep() including indirect.

	- Freedom7 - "Me Too" for Bricks 
			
		- Brick States - All
			- Hierarchical View - Consider groups of bricks (brick package at any level, examples: bricks.hardware, bricks.software, bricks.hardware.io, etc) as an optional grouping for versioning and downloading from friends, not only individual bricks.
				- Do not allow circular dependencies among any level of groups of bricks and voila: the world is free of cyclic dependencies.
